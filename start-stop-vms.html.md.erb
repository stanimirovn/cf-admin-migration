---
title: Stopping and Starting Virtual Machines
owner: BOSH
---

_This topic assumes you are using [BOSH CLI version 2](https://bosh.io/docs/cli-v2.html)._

This topic describes stopping and starting the component virtual machines (VMs) that make up an <%= vars.platform_name %> deployment.

In some cases, you may want to stop all your VMs (for example, power down your deployment) or start all of your <%= vars.app_runtime_first %> VMs (for example, recover from a power outage). You can stop or start all <%= vars.app_runtime_abbr %> VMs with a single `bosh` command.

If you want to shut down or start up a single VM in your deployment, you can use the manual process described in [Stopping and Starting Individual <%= vars.app_runtime_abbr %> VMs](#manual).

This procedure uses the BOSH Command Line Interface (BOSH CLI). <%= vars.bosh_cli_link %>


## <a id='startstop'></a> Stopping and Starting All <%= vars.app_runtime_abbr %> VMs

This section describes how to stop and start all the VMs in your deployment.

### <a id='stop_all'></a> Stopping All <%= vars.app_runtime_abbr %> VMs

To shut down all the VMs in your deployment:

1. Scale down the following jobs to one instance:
   * consul\_server
   * mysql
   <% if vars.platform_code == 'CF' %>* etcd\_tls\_server<%else%><%end%>

1. Run the following command for each of the deployments listed in the previous step:
  <pre>
  bosh -e MY-ENV -d MY-DEPLOYMENT stop --hard
  </pre>
  Replace the text above with the following:
  * `MY-ENV`: the alias you set for the BOSH Director.
  * `MY-DEPLOYMENT`: the name of your deployment.

    For example:
    <pre class="terminal">
    $ bosh -e prod -d mysql stop --hard
    </pre>
    This command stops all VMs in the specified deployment. The `--hard` flag instructs BOSH to delete the VMs but retain any persistent disks.

### <a id='start_all'></a> Starting All <%= vars.app_runtime_abbr %> VMs

To start all the VMs in your deployment:

1. Select the product deployment for the VMs you want to shut down. You can run the following command to locate CF deployment manifests:
  <pre class="terminal">
  $ find /var/tempest/workspaces/default/deployments -name cf-*.yml
  </pre>

1. Run the following command:
  <pre>
  bosh -e MY-ENV -d MY-DEPLOYMENT start
  </pre>
  Replace the text above with the following:
  * `MY-ENV`: the alias you set for the BOSH Director.
  * `MY-DEPLOYMENT`: the name of your deployment.

    For example:
    <pre class="terminal">
    $ bosh -e prod -d mysql start
    </pre>
    This command starts all VMs in the specified deployment.

1. If you require high availability in your deployment, scale up all instance groups to the original or desired counts.


## <a id='manual'></a> Stopping and Starting Individual <%= vars.app_runtime_abbr %> VMs

This section describes how to stop and start individual VMs in your deployment.

### <a id='get-names'></a> Find the Names of Your <%= vars.app_runtime_abbr %> VMs

You need the full names of the VMs to stop and start them using the BOSH CLI. To find full names for the VMs running each component, run `bosh -e MY-ENV instances`, replacing `MY-ENV` with the alias you set for your BOSH Director. To filter the list of instances by deployment, run `bosh -e MY-ENV -d MY-DEPLOYMENT instances`.

For example:

<pre class="terminal">
$ bosh -e prod -d mysql instances
...
Deployment 'mysql'

Instance                    Process State  AZ  IPs
mysql/0123-abcd-4567ef89    running        -   10.244.0.6
mysql/abcd-0123-ef4567ab    running        -   10.244.0.2

2 instances
...
</pre>

You can see the full name of each VM in the `Instance` column of the terminal output. Each full name includes:

* A prefix indicating the component function of the VM.

* An identifier string specific to the VM.

For any component, you can look for its prefix in the `bosh instances` output to find the full name of the VM or VMs that run it.

### <a id='stop'></a> Stopping an Individual <%= vars.app_runtime_abbr %> VM

To stop a job, run the following command for the component in your <%= vars.app_runtime_abbr %> deployment, replacing `MY-ENV` with the alias you set for your BOSH Director and `MY-DEPLOYMENT` with the name of the deployment:
<pre>bosh -e MY-ENV -d MY-DEPLOYMENT stop VM-NAME</pre>

To delete the instance that contains the job, run the following command for the component in your <%= vars.app_runtime_abbr %> deployment:
<pre>bosh -e MY-ENV -d MY-DEPLOYMENT stop VM-NAME --hard</pre>

Use the full name of the component VM as listed in your `bosh instances` terminal output without the unique identifier string.

For example, the following command stops the Loggregator Traffic Controller job:

<pre class='terminal'>
$ bosh -e prod -d loggregator stop loggregator_trafficcontroller
</pre>

To stop a specific instance of a job, include the identifier string at the end of its full name.

For example, the following command stops the Loggregator Traffic Controller job on only one Diego Cell instance:

<pre class="terminal">
$ bosh -e prod -d loggregator stop loggregator_trafficcontroller/0123-abcd-4567ef89
</pre>

To delete the VM, include `--hard` at the end of the command. This command does not delete persistent disks.

For example, the following command deletes a specific Loggregator Traffic Controller instance:

<pre class="terminal">
$ bosh -e prod -d loggregator stop loggregator_trafficcontroller/0123-abcd-4567ef89 --hard
</pre>

### <a id='start'></a> Starting an Individual <%= vars.app_runtime_abbr %> VM

Run the following command for the component in your <%= vars.app_runtime_abbr %> deployment you wish to start, replacing `MY-ENV` with the alias you set for your BOSH Director and `MY-DEPLOYMENT` with the name of the deployment. Use the full name of the component VM as listed in your `bosh vms` terminal output without the unique identifier string.

<pre>bosh -e MY-ENV -d MY-DEPLOYMENT start VM-NAME</pre>

The following example command starts the Loggregator Traffic Controller VM:

<pre class="terminal">
$ bosh -e prod -d loggregator start loggregator_trafficcontroller
</pre>

To start a specific instance of a VM, include the identifier string at the end of its full name.

For example, the following command starts the Loggregator Traffic Controller job on one Diego Cell instance:

<pre class='terminal'>
$ bosh -e prod -d loggregator start loggregator_trafficcontroller/0123-abcd-4567ef89
</pre>
